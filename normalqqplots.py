# -*- coding: utf-8 -*-
"""Normalqqplots.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jhzi3JJJSLGGloaqKVexWEOGrq6emar1
"""

import pandas as pd
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

# importing the csv file into a dataframe
violentcrimedf = pd.read_csv("/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/violentcrimepb.csv", index_col=0) # to get rid of row index
violentcrimedf.head()
# we use df.head() to ensure that the code has run properly

"""# violent crime"""

# we select the year column from violent crime dataset and create new dataframes

violent_2012_df = violentcrimedf['VIOLENT CRIMES PER 1000 PEOPLE 2012']
violent_2012_df

# we convert the dataframe into a numpy array

violentcrime2012arr = violent_2012_df.to_numpy()

violentcrime2012arr

# creartion of the normal q-q plot for violent crime in 2012

stats.probplot(violentcrime2012arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Violent Crime in 2012')
plt.show()

# integrated library that generates normal q-q plots
# it automatically sorts the values in ascending order

violent_2018_df = violentcrimedf['VIOLENT CRIMES PER 1000 PEOPLE 2018']
violent_2018_df

violentcrime2018arr = violent_2018_df.to_numpy()

violentcrime2018arr

stats.probplot(violentcrime2018arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Violent Crime in 2018')
plt.show()

"""we repeat the same process for all the other independent variables that will be included in the multiple linear regression

# nb of full time officers
"""

officersdf = pd.read_csv("/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/officersper1000a.csv", index_col=0) # to get rid of row index
officersdf.head()

officers_2012_df = officersdf['2012']
officers_2012_df

officers2012arr = officers_2012_df.to_numpy()

officers2012arr

stats.probplot(officers2012arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Number of Police Officers in 2012')
plt.show()

officers_2018_df = officersdf['2018']
officers_2018_df

officers2018arr = officers_2018_df.to_numpy()

stats.probplot(officers2018arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Number of Police Officers in 2018')
plt.show()

"""# nb of stop and search measures"""

stopsdf = pd.read_csv("/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/stops.csv", index_col=0) # to get rid of row index
stopsdf.head()

stops_2012_df = stopsdf['2012']
stops_2012_df

stops2012arr = stops_2012_df.to_numpy()

stats.probplot(stops2012arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Number of Stop and Search in 2012')
plt.show()

stops_2018_df = stopsdf['2018']
stops_2018_df

stops2018arr = stops_2018_df.to_numpy()

stats.probplot(stops2012arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Number of Stop and Search in 2018')
plt.show()

"""# pubs and clubs"""

pubclubdf = pd.read_csv("/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/pubclub.csv", index_col=0) # to get rid of row index
pubclubdf.head()

pubclub_2012_df = pubclubdf['2012']
pubclub2012arr = pubclub_2012_df.to_numpy()

stats.probplot(pubclub2012arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Number of Pubs and Clubs in 2012')
plt.show()

pubclub_2018_df = pubclubdf['2018']
pubclub2018arr = pubclub_2018_df.to_numpy()

stats.probplot(pubclub2018arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Number of Pubs and Clubs in 2018')
plt.show()

"""# Happiness Levels"""

happinessdf = pd.read_csv("/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/Happiness.csv", index_col=0) # to get rid of row index
happinessdf.head()

happiness_2012_df = happinessdf['2012']
happiness2012arr = happiness_2012_df.to_numpy()

stats.probplot(happiness2012arr, dist="norm", plot=plt)
plt.title('Normal Q-Q plot of Happiness Levels in 2012')
plt.show()