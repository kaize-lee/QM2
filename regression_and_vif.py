# -*- coding: utf-8 -*-
"""Regression_and_VIF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yC5vMDXKtaKCBgiUtDoMnNiAKWS7H5Ui
"""

#give the notebook access to google drive folder and datasets
from google.colab import drive
drive.mount('/content/drive')
from google.colab import files
uploaded = files.upload()

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 
from sklearn.linear_model import LinearRegression
from statsmodels.stats.outliers_influence import variance_inflation_factor 
from patsy import dmatrices #needed to construct 2 design matrices that are necessary to calculate the Variance inflation factor

dependent_variable = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/violentcrimepb.csv')

independent_variable1 = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/incomes.csv')

independent_variable2 = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/pubclub.csv')

independent_variable3 = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/stops.csv')

independent_variable4 = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/Happiness.csv')

independent_variable5 = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ViolentCrimesProject/officersper1000a.csv')

"""# Correlation between Income and the Amount of Violent Crimes


"""

#here we are merging the 2012 collumn from the dependent variable (crime) and the 2012 collumn from the first independent variable (income) to create a new dataframe
regression1_2012 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2012"]].merge(independent_variable1.loc[:,"2012"], left_index=True, right_index=True)

x_regression1_2012 = regression1_2012['2012']
y_regression1_2012 = regression1_2012['VIOLENT CRIMES PER 1000 PEOPLE 2012']
plt.scatter(x_regression1_2012,y_regression1_2012)
plt.xlabel("Average income per week in British Pounds")
plt.ylabel("Amount of Violent Crimes per 1000 people")
m,b = np.polyfit(x_regression1_2012,y_regression1_2012,1)
plt.plot(x_regression1_2012,m*x_regression1_2012+b, color='black')
plt.title("Amount of violent crimes in function of the average income in 2012")
plt.text(370,35, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.grid('on')
plt.savefig('Income vs Violent Crimes')

#repeating the process to create a new dataframe with the 2018 data from the same two variables 
regression1_2018 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2018"]].merge(independent_variable1.loc[:,"2018"], left_index=True, right_index=True)

x_regression1_2018 = regression1_2018['2018']
y_regression1_2018 = regression1_2018['VIOLENT CRIMES PER 1000 PEOPLE 2018']
plt.scatter(x_regression1_2018,y_regression1_2018)
plt.xlabel("Average income per week in British Pounds")
plt.ylabel("Amount of Violent Crimes per 1000 people")
m,b = np.polyfit(x_regression1_2018,y_regression1_2018,1)
plt.plot(x_regression1_2018,m*x_regression1_2018+b, color='black')
plt.title("Amount of violent crimes in function of the average income in 2018")
plt.text(470,50, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.grid('on')
plt.savefig('Income vs Violent Crimes')

"""#Correlation between the number of pubs and nightclubs per borough and the amount of violent crimes 



"""

regression2_2012 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2012"]].merge(independent_variable2.loc[:,"2012"], left_index=True, right_index=True)

x_regression2_2012 = regression2_2012['2012']
y_regression2_2012 = regression2_2012['VIOLENT CRIMES PER 1000 PEOPLE 2012']
plt.scatter(x_regression2_2012,y_regression2_2012)
plt.xlabel("Number of pubs and nightclubs per 1000 people")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression2_2012,y_regression2_2012,1)
plt.plot(x_regression2_2012,m*x_regression2_2012+b, color='black')
plt.text(0.20,35, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of  number of nightclubs and pubs in 2012")
plt.grid('on')
plt.savefig('Clubs vs Violent Crimes')

regression2_2018 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2018"]].merge(independent_variable2.loc[:,"2018"], left_index=True, right_index=True)

x_regression2_2018 = regression2_2018['2018']
y_regression2_2018 = regression2_2018['VIOLENT CRIMES PER 1000 PEOPLE 2018']
plt.scatter(x_regression2_2018,y_regression2_2018)
plt.xlabel("Number of pubs and nightclubs per 1000 people")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression2_2018,y_regression2_2018,1)
plt.plot(x_regression2_2018,m*x_regression2_2018+b, color='black')
plt.text(0.1,50, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of  number of nightclubs and pubs in 2018")
plt.grid('on')
plt.savefig('Clubs vs Violent Crimes')

"""#Correlation between the amount of stop and search by the police and the amount of violent crimes

"""

regression3_2012 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2012"]].merge(independent_variable3.loc[:,"2012"], left_index=True, right_index=True)

x_regression3_2012 = regression3_2012['2012']
y_regression3_2012 = regression3_2012['VIOLENT CRIMES PER 1000 PEOPLE 2012']
plt.scatter(x_regression3_2012,y_regression3_2012)
plt.xlabel("Number of stops and search 1000 people")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression3_2012,y_regression3_2012,1)
plt.plot(x_regression3_2012,m*x_regression3_2012+b, color='black')
plt.text(30,37, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of the number of stops and search in 2012")
plt.grid('on')
plt.savefig('Stops vs Violent Crimes')

regression3_2018 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2018"]].merge(independent_variable3.loc[:,"2018"], left_index=True, right_index=True)

x_regression3_2018 = regression3_2018['2018']
y_regression3_2018 = regression3_2018['VIOLENT CRIMES PER 1000 PEOPLE 2018']
plt.scatter(x_regression3_2018,y_regression3_2018)
plt.xlabel("Number of stops and search 1000 people")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression3_2018,y_regression3_2018,1)
plt.plot(x_regression3_2018,m*x_regression3_2018+b, color='black')
plt.text(5,50, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of the number of stops and search in 2018")
plt.grid('on')
plt.savefig('Stops vs Violent Crimes')

"""#correlation between the average happiness of citizens and the amount of violent crimes

"""

regression4_2012 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2012"]].merge(independent_variable4.loc[:,"2012"], left_index=True, right_index=True)

x_regression4_2012 = regression4_2012['2012']
y_regression4_2012 = regression4_2012['VIOLENT CRIMES PER 1000 PEOPLE 2012']
plt.scatter(x_regression4_2012,y_regression4_2012)
plt.xlabel("Average happiness level")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression4_2012,y_regression4_2012,1)
plt.plot(x_regression4_2012,m*x_regression4_2012+b, color='black')
plt.text(6.9,35, 'y = ' + '{:.2f}'.format(b) + ' {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of the happiness level in 2012")
plt.grid('on')
plt.savefig('Happiness vs Violent Crimes')

regression4_2018 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2018"]].merge(independent_variable4.loc[:,"2018"], left_index=True, right_index=True)

x_regression4_2018 = regression4_2018['2018']
y_regression4_2018 = regression4_2018['VIOLENT CRIMES PER 1000 PEOPLE 2018']
plt.scatter(x_regression4_2018,y_regression4_2018)
plt.xlabel("Average happiness level")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression4_2018,y_regression4_2018,1)
plt.plot(x_regression4_2018,m*x_regression4_2018+b, color='black')
plt.text(6.8,50, 'y = ' + '{:.2f}'.format(b) + '{:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of the happiness level in 2018")
plt.grid('on')
plt.savefig('Happiness vs Violent Crimes')

"""#correlation between the number of police officers per 1000 people and the crime rate"""

regression5_2012 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2012"]].merge(independent_variable5.loc[:,"2012"], left_index=True, right_index=True)

x_regression5_2012 = regression5_2012['2012']
y_regression5_2012 = regression5_2012['VIOLENT CRIMES PER 1000 PEOPLE 2012']
plt.scatter(x_regression5_2012,y_regression5_2012)
plt.xlabel("Number of police officers per 1000 people")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression5_2012,y_regression5_2012,1)
plt.plot(x_regression5_2012,m*x_regression5_2012+b, color='black')
plt.text(1.5,37, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of the amount of police officers per 1000 people")
plt.grid('on')
plt.savefig('police vs Violent Crimes')

regression5_2018 = dependent_variable.loc[:,["Borough","VIOLENT CRIMES PER 1000 PEOPLE 2018"]].merge(independent_variable5.loc[:,"2018"], left_index=True, right_index=True)

x_regression5_2018 = regression5_2018['2018']
y_regression5_2018 = regression5_2018['VIOLENT CRIMES PER 1000 PEOPLE 2018']
plt.scatter(x_regression5_2018,y_regression5_2018)
plt.xlabel("Number of police officers per 1000 people")
plt.ylabel("Number of violent crimes")
m,b = np.polyfit(x_regression5_2018,y_regression5_2018,1)
plt.plot(x_regression5_2018,m*x_regression5_2018+b, color='black')
plt.text(1.0,50, 'y = ' + '{:.2f}'.format(b) + ' + {:.2f}'.format(m) + 'x')
plt.title("Amount of violent crimes in function of amount of police officers per 1000 people")
plt.grid('on')
plt.savefig('police vs Violent Crimes')

"""#Checking if the independent variables correlate with each other using the Variance Inflation Factor (VIF)"""

#creating a dataframe with the dependent variable and all the independent ones (exept income as it does not correlate with crime levels)
#process takes 3 steps as we have to merge the data one by one
VIF1_2012 = regression2_2012.merge(independent_variable3.loc[:,"2012"], left_index=True, right_index=True)

VIF2_2012 = VIF1_2012.merge(independent_variable4.loc[:,"2012"], left_index=True, right_index=True)

VIFinal_2012 = VIF2_2012.merge(independent_variable5.loc[:,"2012"], left_index=True, right_index=True)

#renaming the collumns that contain the variables
VIFinal_2012.columns = ['Borough', 'Crimes', 'Pubs', 'Stops', 'Happiness', 'Officers']

#creates a design matrices for a regression using Crimes as the dependent variable
y, X= dmatrices('Crimes ~ Pubs + Stops + Happiness + Officers', data=VIFinal_2012, return_type='dataframe')

vif = pd.DataFrame()
vif['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]
vif['variable'] = X.columns
vif

#repeating the same process with the 2018 data
VIF1_2018 = regression2_2018.merge(independent_variable3.loc[:,"2018"], left_index=True, right_index=True)

VIF2_2018 = VIF1_2018.merge(independent_variable4.loc[:,"2018"], left_index=True, right_index=True)

VIFinal_2018 = VIF2_2018.merge(independent_variable5.loc[:,"2018"], left_index=True, right_index=True)

VIFinal_2018.columns = ['Borough', 'Crimes', 'Pubs', 'Stops', 'Happiness', 'Officers']

y, X= dmatrices('Crimes ~ Pubs + Stops + Happiness + Officers', data=VIFinal_2018, return_type='dataframe')

vif = pd.DataFrame()
vif['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]
vif['variable'] = X.columns
vif